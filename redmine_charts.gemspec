# Generated by jeweler
# DO NOT EDIT THIS FILE DIRECTLY
# Instead, edit Jeweler::Tasks in Rakefile, and run 'rake gemspec'
# -*- encoding: utf-8 -*-

Gem::Specification.new do |s|
  s.name = "redmine_charts"
  s.version = "0.1.5"

  s.required_rubygems_version = Gem::Requirement.new(">= 0") if s.respond_to? :required_rubygems_version=
  s.authors = ["Maciej Szczytowski"]
  s.date = "2012-12-01"
  s.description = "Plugin for Redmine which integrates some nice project charts."
  s.email = "mszczytowski@gmail.com"
  s.extra_rdoc_files = [
    "LICENSE",
    "README.markdown"
  ]
  s.files = [
    "LICENSE",
    "README.markdown",
    "Rakefile",
    "VERSION",
    "app/controllers/charts_burndown2_controller.rb",
    "app/controllers/charts_burndown_controller.rb",
    "app/controllers/charts_controller.rb",
    "app/controllers/charts_deviation_controller.rb",
    "app/controllers/charts_issue_controller.rb",
    "app/controllers/charts_ratio_controller.rb",
    "app/controllers/charts_timeline_controller.rb",
    "app/helpers/charts_helper.rb",
    "app/models/chart_done_ratio.rb",
    "app/models/chart_issue_status.rb",
    "app/models/chart_saved_condition.rb",
    "app/models/chart_time_entry.rb",
    "app/views/charts/_filters.rhtml",
    "app/views/charts/_saved_conditions.rhtml",
    "app/views/charts/index.rhtml",
    "assets/javascripts/charts.js",
    "config/locales/cs.yml",
    "config/locales/da.yml",
    "config/locales/de.yml",
    "config/locales/en.yml",
    "config/locales/es.yml",
    "config/locales/fr.yml",
    "config/locales/ja.yml",
    "config/locales/ko.yml",
    "config/locales/nl.yml",
    "config/locales/pl.yml",
    "config/locales/pt-BR.yml",
    "config/locales/ru.yml",
    "config/locales/sv.yml",
    "config/routes.rb",
    "db/migrate/20100222185306_create_chart_time_entries.rb",
    "db/migrate/20100222185307_create_chart_done_ratios.rb",
    "db/migrate/20100222185308_create_chart_issue_statuses.rb",
    "db/migrate/20100407184912_create_chart_saved_conditions.rb",
    "init.rb",
    "lib/redmine_charts.rb",
    "lib/redmine_charts/conditions_utils.rb",
    "lib/redmine_charts/grouping_utils.rb",
    "lib/redmine_charts/issue_patch.rb",
    "lib/redmine_charts/line_data_converter.rb",
    "lib/redmine_charts/pagination_utils.rb",
    "lib/redmine_charts/pie_data_converter.rb",
    "lib/redmine_charts/range_utils.rb",
    "lib/redmine_charts/stack_data_converter.rb",
    "lib/redmine_charts/time_entry_patch.rb",
    "lib/redmine_charts/utils.rb",
    "lib/tasks/migrate.rake",
    "lib/tasks/test.rake",
    "redmine_charts.gemspec",
    "test/fixtures/enabled_modules.yml",
    "test/fixtures/issue_categories.yml",
    "test/fixtures/issues.yml",
    "test/fixtures/journal_details.yml",
    "test/fixtures/journals.yml",
    "test/fixtures/members.yml",
    "test/fixtures/projects.yml",
    "test/fixtures/projects_trackers.yml",
    "test/fixtures/time_entries.yml",
    "test/fixtures/versions.yml",
    "test/functional/charts_burndown2_controller_test.rb",
    "test/functional/charts_burndown_controller_test.rb",
    "test/functional/charts_controller_test.rb",
    "test/functional/charts_deviation_controller_test.rb",
    "test/functional/charts_issue_controller_test.rb",
    "test/functional/charts_ratio_controller_test.rb",
    "test/functional/charts_timeline_controller_test.rb",
    "test/functional/saved_conditions_test.rb",
    "test/test_helper.rb",
    "test/unit/chart_done_ratio_test.rb",
    "test/unit/chart_time_entry_test.rb",
    "test/unit/conditions_utils_test.rb",
    "test/unit/grouping_utils_test.rb",
    "test/unit/issue_patch_test.rb",
    "test/unit/pagination_utils_test.rb",
    "test/unit/range_utils_test.rb",
    "test/unit/time_entry_patch_test.rb",
    "test/unit/utils_test.rb"
  ]
  s.homepage = "http://github.com/mszczytowski/redmine_charts/"
  s.require_paths = ["lib"]
  s.rubygems_version = "1.8.23"
  s.summary = "Plugin for Redmine which integrates some nice project charts."

  if s.respond_to? :specification_version then
    s.specification_version = 3

    if Gem::Version.new(Gem::VERSION) >= Gem::Version.new('1.2.0') then
    else
    end
  else
  end
end

